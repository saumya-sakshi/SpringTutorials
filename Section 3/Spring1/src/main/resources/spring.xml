<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
<!-- this definition needs to be added for it to be a xml configuration which defines what these beans means-->

   <!-- <bean id="alien1" class="org.example.Alien" scope="prototype"></bean> 
   There are different scope for each beans by default it is singleton ie one object will be created -->
    <!-- But if we want different object to be created each time we call the getbean() we can use prototype scope-->
    <bean id="alien1" class="org.example.Alien"  autowire="byType">
<!--        it will autowire to the objects by itself bu searching the name-->
        <property name="age" value="21" ></property>

<!--        <property name="com" ref="lap1"/> &lt;!&ndash;com is a reference to Computer interface which is implemented by Laptop so it cant have value&ndash;&gt;-->
<!--&lt;!&ndash;        <property name="lap" ref="lap1"/> &lt;!&ndash;Lap is a reference to Laptop class so it cant have value&ndash;&gt;&ndash;&gt;-->
<!--        &lt;!&ndash;        <property name="age" value="21"></property> AGE IS A PROPERTY&ndash;&gt;-->
<!--&lt;!&ndash;        <constructor-arg type="org.example.Laptop" ref="lap1"/>&ndash;&gt;-->
<!--&lt;!&ndash;        <constructor-arg value="21"/>&ndash;&gt;-->

<!--&lt;!&ndash;        <constructor-arg index="1" ref="lap1"/>&ndash;&gt;-->
<!--&lt;!&ndash;        <constructor-arg index="0" value="21"/>&ndash;&gt;-->
<!--&lt;!&ndash;                <constructor-arg name="lap" ref="lap1"/>&ndash;&gt;-->
<!--&lt;!&ndash;                <constructor-arg name="age" value="21"/>&ndash;&gt;-->


    </bean>

<!--    <bean id="lap2" class="org.example.Laptop"/>-->
    <bean id="lap1" class="org.example.Laptop" primary="true"/>
    <bean id="com" class="org.example.Desktop"/>

    <!--Even If we have multiple objects for Laptop but in ref the object with id lap1 will be referred-->
    <!--Even If we have autowire but still used ref with id lap1 then lap1 will be referred-->

<!--    if we use in autowire by type then it will be refered by the type of bean-->
<!--   expected single matching bean but found 2: lap1,com this can be solved by primary=true-->
<!--    primary works only in case of confusing but if we mention explicitly then it will use that bean-->


</beans>